
# Explicit over implicit
# run and exec are used widely, that's why I use runcmd and runmain to avoid any possible conflicts and misudnerstanding.
# Both of them are used in sandbox related modules.

# x alpine run
# x alpine exec

# x alpine execenv

# x pixi exec

# x pixi  --name abc

# x pixi //

# x pixi easyrun
# x pixi erun
# x pixi srun -> snaprun / sandbox-run

# x pixi snap
# x pixi //
# x pixi ::
# x pixi snap

# x pixi snap

# x pixi snap nmap:nping
# x pixi nmap:nping

# x pixi snap nmap
# x pixi nmap

# x alpine snap
# x alpine snap

# x pixi exec -s nmap nping

# x pixi exec -s

# x alpine snap

# x alpine fire
# x alpine launch
# x alpine shoot

# x pixi try

# xd alp
# xrun


# x alpine :<container> gcc

# x pixi --runcmd --> x pixi <nativemcd>



# x nmap --         -> x nmap --runmain

# x nmap --runcmdb


# x nmap --runcmd   -> x nmap --runcmd-container
# x nmap --runcmd --host
# x nmap --runcmd --remote

# x nmap --runcmd --container

# x nmap --runcmd --container --docker
# x nmap --runcmd --container --podman
# x nmap --runcmd --container --k8s
# x nmap --runcmd --container --bwrap
# x nmap --runcmd --container --proot



# 内部使用
# x nmap --runcmd

# 常用
# x nmap --runmain
# x nmap echo hi
# x nmap -- echo hi


___x_cmd_nmap___runmain(){
    ___x_cmd_nmap___runcmd nmap "$@"
}

___x_cmd_nmap___runcmd(){
    if ___x_cmd os is win; then
        ___x_cmd_nmap___runcmd_win "$@"
    else
        ___x_cmd_nmap___runcmd_unix "$@"
    fi
}

___x_cmd_nmap___runcmd_unix(){
    ! ___x_cmd_hascmd nmap || {
        ___x_cmd_cmds nmap "$@"
        return
    }

    ___x_cmd pkg snap -v v0.3 -n nmap nmap "$@"

    N=nping M="Fail to prepare nping using npkg" log:ret:1
}

___x_cmd_nmap___runcmd_win(){
    ___x_cmd_nmap___runcmd_win0 "$@"
    ___x_cmd winget install nmap
    ___x_cmd_nmap___runcmd_win0 "$@"
}

___x_cmd_nmap___runcmd_win0(){
    ! ___x_cmd_hascmd nmap || {
        ___x_cmd_cmds nmap "$@"
        return
    }

    # check $WINPROG/NMap/bin
    # check $$WINPRO/NMap/...
    return 1
}

